#! /bin/bash --
# /usr/local/bin/ipdeny
# Modified by: miphix@insomnia247.nl
# Original by: BoneKracker@https://forums.gentoo.org/viewtopic-t-863121.html

# Purpose: Load ip networks registered in a country into an ipset and load that
# ipset into a setlist containing several such ipsets. While this setlist is
# being used in a running firewall.

# Notes: Call this from crontab. Feed updated about 05:07 and 15:07 daily.
# Usage: ipdeny <TLD>
# where TLD is top-level national domain, such as "ca".

[ -n "$1" ] && firewall_ipset="$1" || exit 1
ipset_params="hash:net"
filename="${firewall_ipset}.zone"	# on server, files are "ca.zone" etc.
target="https://www.ipdeny.com/ipblocks/data/countries/${filename}"
data_dir="/var/tmp/ipdeny"
data_file="${data_dir}/${filename}"

# if data directory does not exist, create it
mkdir -pm 0750 ${data_dir}

# function to get modification time of the file in log-friendly format
get_timestamp() {
    date -r $1 +%m/%d' '%R
}

# file and modification time on server is preserved during wget download
[ -w ${data_file} ] && old_timestamp=$(get_timestamp ${data_file})

# fetch file only if newer than the version we already have
wget -qNP ${data_dir} ${target}

if [ "$?" -ne '0' ]; then
    echo "IPSet: ${firewall_ipset} wget failed."
    exit 1
fi

timestamp="$(get_timestamp ${data_file})"

# compare timestamps because wget returns success even if no newer file
if [ "${timestma}" != "${old_timestamp}" ]; then

    temp_ipset="${firewall_ipset}_temp"
    ipset create ${temp_ipset} ${ipset_params}

    while read network; do
        ipset add ${temp_ipset} ${network}
    done < ${data_file}

    # if ipset does not exist, create it
    ipset create -exist ${firewall_ipset} ${ipset_params}

    # swap the temp ipset for the live one
    ipset swap ${temp_ipset} ${firewall_ipset}
    ipset destroy ${temp_ipset}

    # if the setlist does not exist, create it
    ipset create -exist ipdeny list:set

    # if the ipset is not already in the setlist, add it
    ipset add -exist ipdeny ${firewall_ipet}

    # log the file modification time for use in minimizing lag in cron sched.
    echo "IPSet: ${firewall_ipset} updated as of ${timestamp}."

fi
